@charset "UTF-8";

*{margin: 0; padding: 0;
  box-sizing: border-box;
}

/* grid는 flex보다 나중에 나왔음
flex는 한방향 배치 구현
grid는 두방향 배치 구현
장단점을 살려 두개를 같이 사용함
두개를 다 안다면 알맞는 곳에 사용할 수 있다.
전체 구성은 grid로 하고 부분 구성은 flex로 하는 경우가 많다. */

.container{
  display: grid;
  border: 2px solid #000 ;
  background-color: forestgreen;
  padding: 10px;
}

.container .item{
  padding: 10px;
  border: 2px solid #000 ;
  background-color: silver;
}

/* grid-column,grid-row 

★grid에는 라인이 있는데 그 라인에는 번호가 있음.
각 셀별로 영역을 지정할 수 있음. item(자식)에게 지정해야함.

*/
html{font-size: 25px;}
body{
  font-size: 20px;
}

.container{
  font-size: 12px;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
  gap: 1rem;
  /* (r은 root 뿌리를 의미) */
}

.item{
  font-size: 1rem;
}
.item:nth-child(1){
  grid-column-start: 1;
  grid-column-end: 3;
  grid-column: 1/4;
  /* 1~4번까지의 컬 그리드를 의미. */
  grid-row: 2/4;
}
.item:nth-child(4){
  grid-row: 4; /* --> 3/4 안적으면 1이 추가 되는게 기본값 */
  /* 기본이 1칸이므로 end는 생략할 수 있다. */
  grid-row: 3/5;
  grid-row: 3/span 2;
  /* 3번부터 시작하는데 2칸 차지해라는 뜻 */
  grid-row: 1/span 8;
  grid-row: 2/span 8;
  grid-column: 3;

}
.item:nth-child(3){
  grid-row: 2;
  grid-column: 3;
  z-index: 5;
  /* grid에서는 position없이 z-index 실행 */
}


